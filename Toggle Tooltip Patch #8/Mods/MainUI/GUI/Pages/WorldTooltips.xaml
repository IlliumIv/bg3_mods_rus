<ls:UIWidget x:Name="WorldTooltips"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ls="clr-namespace:ls;assembly=Code"
             Template="{StaticResource Hud.Root}"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance {x:Type ls:Widget}, IsDesignTimeCreatable=True}">

	<ls:UIWidget.ContentTemplate>
		<DataTemplate>
			<DataTemplate.Resources>
				<DataTemplate x:Key="CommonTooltipTemplate">
                    <ls:LSWorldTooltipPanel x:Name="worldTooltipPanel">
						<b:Interaction.Triggers>
							<b:EventTrigger EventName="MouseEnter">
								<b:InvokeCommandAction Command="{Binding DataContext.SetHoveredWorldTooltipCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding GameObject}" />
							</b:EventTrigger>
							<b:EventTrigger EventName="MouseLeave">
								<b:InvokeCommandAction Command="{Binding DataContext.SetHoveredWorldTooltipCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="" />
							</b:EventTrigger>
							<b:EventTrigger EventName="MouseLeftButtonUp" >
								<b:InvokeCommandAction Command="{Binding DataContext.SelectWorldTooltipCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding GameObject}" />
							</b:EventTrigger>
						</b:Interaction.Triggers>
                        <Border x:Name="border" Width="1024" Height="512" Canvas.Left="-512" Canvas.Top="{Binding ElementName=worldTooltip, Path=SeparationOffset, Converter={StaticResource AddConverter}, ConverterParameter=-128}">

							<ls:LSNineSliceImage Style="{StaticResource WorldTooltip9Slice}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Grid Margin="6,-4,6,-6">
                                    <Border Background="Transparent" DataContext="{Binding GameObject}">
                                        <b:Interaction.Behaviors>
                                            <ls:DragGenericBehavior StartDragCommand="{Binding DataContext.StartGameObjectDragCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" />
                                        </b:Interaction.Behaviors>
                                    </Border>
                                    <StackPanel VerticalAlignment="Center" IsHitTestVisible="False">
                                        <StackPanel.Resources>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                                <Setter Property="TextAlignment" Value="Center"/>
                                                <Setter Property="FontSize" Value="{StaticResource ScaledMediumFontSize}"/>
                                            </Style>
                                        </StackPanel.Resources>
                                        <DockPanel HorizontalAlignment="Center">
                                            <TextBlock x:Name="NameTxt" DockPanel.Dock="Left" ls:TextBlockFormatter.SourceText="{Binding Name}" Foreground="{StaticResource TooltipColor.Title}" Visibility="{Binding Name, Converter={StaticResource StringToVisibilityConverter}}" FontSize="{StaticResource MediumFontSize}" MaxWidth="1024" TextWrapping="Wrap"/>
                                            <TextBlock x:Name="ExtraInfo" DockPanel.Dock="Left" Foreground="{StaticResource TooltipColor.Secondary}" Visibility="Collapsed"/>
                                        </DockPanel>
                                        <TextBlock x:Name="DescriptionTxt" ls:TextBlockFormatter.SourceText="{Binding Description}" Foreground="{StaticResource TooltipColor.Primary}" Visibility="{Binding Description, Converter={StaticResource StringToVisibilityConverter}}"/>
                                    </StackPanel>
                                </Grid>
                                
							</ls:LSNineSliceImage>
						</Border>
					</ls:LSWorldTooltipPanel>
					<DataTemplate.Triggers>
						<DataTrigger Binding="{Binding Item.Rarity}" Value="Uncommon">
							<Setter TargetName="NameTxt" Property="Foreground" Value="{StaticResource ItemRarityColour.Uncommon}"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding Item.Rarity}" Value="Rare">
							<Setter TargetName="NameTxt" Property="Foreground" Value="{StaticResource ItemRarityColour.Rare}"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding Item.Rarity}" Value="VeryRare">
							<Setter TargetName="NameTxt" Property="Foreground" Value="{StaticResource ItemRarityColour.VeryRare}"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding Item.Rarity}" Value="Legendary">
							<Setter TargetName="NameTxt" Property="Foreground" Value="{StaticResource ItemRarityColour.Legendary}"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding Item.IsStoryItem}" Value="True">
							<Setter TargetName="NameTxt" Property="Foreground" Value="{StaticResource LS_storyColor}"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding IsStealing}" Value="True">
							<Setter TargetName="NameTxt" Property="Foreground" Value="{StaticResource LS_alertTxtColor}"/>
						</DataTrigger>

						<DataTrigger Binding="{Binding ContainerState}" Value="Empty">
                        <!--
							<Setter TargetName="ExtraInfo" Property="Text" Value="{Binding Source='h823595e6g550fg4614gb1ddgdcd323bb4c69',Converter={StaticResource TranslatedStringConverter}, StringFormat='{} - {0}'}"/>
							<Setter TargetName="ExtraInfo" Property="Visibility" Value="Visible"/>
                        -->
							<Setter TargetName="ExtraInfo" Property="Text" Value="{Binding Source='h823595e6g550fg4614gb1ddgdcd323bb4c69',Converter={StaticResource TranslatedStringConverter}, StringFormat='{} - {0}'}"/>
							<Setter TargetName="ExtraInfo" Property="Visibility" Value="Visible"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding ContainerState}" Value="NotExplored">
							<Setter TargetName="ExtraInfo" Property="Text" Value="*"/>
							<Setter TargetName="ExtraInfo" Property="Visibility" Value="Visible"/>
						</DataTrigger>
					</DataTemplate.Triggers>
				</DataTemplate>
			</DataTemplate.Resources>

            <Grid x:Name="Root">
                <!-- Show all the world tooltips for this player -->
				<ItemsControl ItemsSource="{Binding CurrentPlayer.WorldTooltips}" ItemTemplate="{StaticResource CommonTooltipTemplate}" x:Name="WorldTooltipContainer" IsHitTestVisible="True">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<ls:LSWorldTooltipsCanvas ClipToBounds="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
					<ItemsControl.ItemContainerStyle>
						<Style TargetType="ContentPresenter">
                            <Setter Property="Canvas.Left" Value="{Binding Position.X}"/>
							<Setter Property="Canvas.Top" Value="{Binding Position.Y}"/>
							<Setter Property="Canvas.ZIndex" Value="1"/>
							<Style.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Canvas.ZIndex" Value="1000" />
								</Trigger>
							</Style.Triggers>
						</Style>
					</ItemsControl.ItemContainerStyle>
                </ItemsControl>

                <!--
                <ls:LSInputBinding BoundEvent="ShowWorldTooltips" Command="{Binding SetShowWorldTooltipsCommand}" CommandParameter="{StaticResource FalseValue}" TriggerOnRelease="True" EatInput="False"/>
				-->
                <ls:LSInputBinding BoundEvent="ShowWorldTooltips" Command="{Binding SetShowWorldTooltipsCommand}" CommandParameter="{StaticResource FalseValue}" EatInput="False"/>
				<ls:LSInputBinding BoundEvent="ShowWorldTooltips" Command="{Binding SetShowWorldTooltipsCommand}" EatInput="False"/>
			</Grid>
			<DataTemplate.Triggers>
                <DataTrigger Binding="{Binding CurrentPlayer.WorldTooltips.Count}" Value="0">
                    <Setter TargetName="WorldTooltipContainer" Property="IsHitTestVisible" Value="False"/>
                </DataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding CurrentPlayer.PlayerId}" Value="1"/>
                        <Condition Binding="{Binding Data.IsCameraSplit}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <!-- We need to set the background to ensure the grid content will occupy the whole space -->
                    <Setter TargetName="Root" Property="Background" Value="Transparent"/>
                    <Setter TargetName="Root" Property="OpacityMask">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                <GradientStop Offset="0" Color="Black" />
                                <GradientStop Offset="0.5" Color="Black" />
                                <GradientStop Offset="0.500000001" Color="Transparent" />
                                <GradientStop Offset="1" Color="Transparent" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding CurrentPlayer.PlayerId}" Value="2"/>
                        <Condition Binding="{Binding Data.IsCameraSplit}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <!-- We need to set the background to ensure the grid content will occupy the whole space -->
                    <Setter TargetName="Root" Property="Background" Value="Transparent"/>
                    <Setter TargetName="Root" Property="OpacityMask">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                <GradientStop Offset="0" Color="Transparent" />
                                <GradientStop Offset="0.499999999" Color="Transparent" />
                                <GradientStop Offset="0.5" Color="Black" />
                                <GradientStop Offset="1" Color="Black" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger>

            </DataTemplate.Triggers>
		</DataTemplate>
	</ls:UIWidget.ContentTemplate>
    <b:Interaction.Triggers>
        <b:PropertyChangedTrigger Binding="{Binding CurrentPlayer.UIData.ActiveState}">
            <b:InvokeCommandAction Command="{Binding SetShowWorldTooltipsCommand}" CommandParameter="{StaticResource FalseValue}"/>
        </b:PropertyChangedTrigger>
    </b:Interaction.Triggers>
</ls:UIWidget>